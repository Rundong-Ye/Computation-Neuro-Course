# ask for permission
Set-ExecutionPolicy RemoteSigned
# run the bat of freeFileSync to update the local folder to the remote folder
Start-Process G:\Worm-Thermotaxis\System\syncLocalFolder2Server.ffs_batch
# Sleep for 2 seconds
Write-Host "Files Sync Done."
Write-Host "Please wait 10 seconds for cleaning temporary caches."
sleep 10 # seconds

### In the local folder, automatically create links to link data in the remote folder
$LocalPath = "G:\Worm-Thermotaxis\Data\links"
$RemotePath = "\\222.195.69.205\wenlab\Projects\B_Taxis_Behaviors_B\Data\thermotaxis"

# if RemotePath or LocalPath does not exist create one
if (!(Test-Path -path $RemotePath)) {New-Item $RemotePath -ItemType Directory}
if (!(Test-Path -path $LocalPath)) {New-Item $LocalPath -ItemType Directory}


# remove invalid links in the local folder
$links = Get-ChildItem $LocalPath
if (!([string]::IsNullOrEmpty($links)))
{
    # for each link
    foreach ($link in $links) {
        $LShell = New-Object -comObject WScript.Shell
        $linkFile = $link.FullName
        $target = $WshShell.CreateShortcut($linkFile).targetpath
        if(!(Test-Path $target)) # if target does not exist, remove the link
        {
            Remove-Item -Path $linkFile -Force  
        }
    }
}

# Get all files on the remote path
$files = Get-ChildItem $RemotePath # there could be filters
$re = "^" + [regex]::Escape("$RemotePath\")
#Foreach-Object
foreach ($file in $files) {
    $WshShell = New-Object -comObject WScript.Shell
    $targetPath = $file.FullName
    $relativePath = $targetPath -replace $re
    
    # create a link for each file and folder
    $linkPath = "$LocalPath\$relativePath.lnk" 
    if(![System.IO.File]::Exists($linkPath))
    {
        $Shortcut = $WshShell.CreateShortcut($linkPath)
        $Shortcut.TargetPath = $targetPath
        $Shortcut.Save()
    }
    
    
    
}
Write-Host "Synchronization Done. The program will exit in 10 seconds"
# hold-on for 10 seconds to check out the messaged in the console
sleep 5
